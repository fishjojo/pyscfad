import torch
from keras_core import ops

def asarray(a, dtype=None, order=None, *, like=None, **kwargs):
    return torch.asarray(a, dtype=dtype, **kwargs)

def iscomplexobj(x):
    return torch.is_complex(x)

abs             =  ops.abs
absolute        =  ops.absolute
add             =  ops.add
all             =  ops.all
amax            =  ops.amax
amin            =  ops.amin
append          =  ops.append
arange          =  ops.arange
arccos          =  ops.arccos
arccosh         =  ops.arccosh
arcsin          =  ops.arcsin
arcsinh         =  ops.arcsinh
arctan          =  ops.arctan
arctan2         =  ops.arctan2
arctanh         =  ops.arctanh
argmax          =  ops.argmax
argmin          =  ops.argmin
argsort         =  ops.argsort
array           =  ops.array
average         =  ops.average
bincount        =  ops.bincount
broadcast_to    =  ops.broadcast_to
ceil            =  ops.ceil
clip            =  ops.clip
concatenate     =  ops.concatenate
conj            =  ops.conj
conjugate       =  ops.conjugate
copy            =  ops.copy
cos             =  ops.cos
cosh            =  ops.cosh
count_nonzero   =  ops.count_nonzero
cross           =  ops.cross
cumprod         =  ops.cumprod
cumsum          =  ops.cumsum
diag            =  ops.diag
diagonal        =  ops.diagonal
#diff            =  ops.diff
digitize        =  ops.digitize
divide          =  ops.divide
dot             =  ops.dot
#dtype           =  ops.dtype
einsum          =  ops.einsum
empty           =  ops.empty
equal           =  ops.equal
exp             =  ops.exp
expand_dims     =  ops.expand_dims
expm1           =  ops.expm1
eye             =  ops.eye
flip            =  ops.flip
floor           =  ops.floor
full            =  ops.full
full_like       =  ops.full_like
greater         =  ops.greater
greater_equal   =  ops.greater_equal
hstack          =  ops.hstack
identity        =  ops.identity
imag            =  ops.imag
int32           =  torch.int32
#interp          =  ops.interp
isclose         =  ops.isclose
isfinite        =  ops.isfinite
isinf           =  ops.isinf
isnan           =  ops.isnan
less            =  ops.less
less_equal      =  ops.less_equal
linspace        =  ops.linspace
log             =  ops.log
log10           =  ops.log10
log1p           =  ops.log1p
log2            =  ops.log2
logaddexp       =  ops.logaddexp
logical_and     =  ops.logical_and
logical_not     =  ops.logical_not
logical_or      =  ops.logical_or
logspace        =  ops.logspace
matmul          =  ops.matmul
max             =  ops.max
maximum         =  ops.maximum
mean            =  ops.mean
#median          =  ops.median
meshgrid        =  ops.meshgrid
#mgrid           =  ops.mgrid
min             =  ops.min
minimum         =  ops.minimum
mod             =  ops.mod
moveaxis        =  ops.moveaxis
multiply        =  ops.multiply
nan_to_num      =  ops.nan_to_num
ndim            =  ops.ndim
nonzero         =  ops.nonzero
not_equal       =  ops.not_equal
ones            =  ops.ones
ones_like       =  ops.ones_like
outer           =  ops.outer
pad             =  ops.pad
#percentile      =  ops.percentile
power           =  ops.power
prod            =  ops.prod
ravel           =  ops.ravel
real            =  ops.real
reciprocal      =  ops.reciprocal
repeat          =  ops.repeat
reshape         =  ops.reshape
roll            =  ops.roll
round           =  ops.round
sign            =  ops.sign
sin             =  ops.sin
sinh            =  ops.sinh
size            =  ops.size
sort            =  ops.sort
split           =  ops.split
sqrt            =  ops.sqrt
square          =  ops.square
squeeze         =  ops.squeeze
stack           =  ops.stack
std             =  ops.std
subtract        =  ops.subtract
sum             =  ops.sum
swapaxes        =  ops.swapaxes
take            =  ops.take
take_along_axis =  ops.take_along_axis
tan             =  ops.tan
tanh            =  ops.tanh
tensordot       =  ops.tensordot
tile            =  ops.tile
trace           =  ops.trace
transpose       =  ops.transpose
tri             =  ops.tri
tril            =  ops.tril
tril_indices    =  torch.tril_indices
triu            =  ops.triu
triu_indices    =  torch.triu_indices
true_divide     =  ops.true_divide
vdot            =  ops.vdot
vstack          =  ops.vstack
where           =  ops.where
zeros           =  ops.zeros
zeros_like      =  ops.zeros_like
